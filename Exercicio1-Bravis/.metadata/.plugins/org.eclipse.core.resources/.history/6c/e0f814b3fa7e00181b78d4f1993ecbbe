package br.bravi;

import java.util.Stack;

public class Teste {

	private final char  ABRE_PARENTESES = '('; 
	private final char  FECHA_PARENTESES = ')';
	private final char  ABRE_COLCHETES = '['; 
	private final char  FECHA_COLCHETES = ']';
	private final char  ABRE_CHAVES = '{'; 
	private final char  FECHA_CHAVES = '}';

	@SuppressWarnings("unchecked")
	public boolean seEstaBalanceada (String expressao){
		@SuppressWarnings("rawtypes")
		Stack pilhaDeCharProcurados = new Stack();
		char topo = expressao.charAt(0);

		for (int i=0; i < expressao.length(); i ++){
			
			if (expressao.charAt(i) == ABRE_PARENTESES){				
				topo = ABRE_PARENTESES;
				pilhaDeCharProcurados.push(FECHA_PARENTESES);
			}

			if (expressao.charAt(i) == ABRE_COLCHETES){				
				topo = ABRE_COLCHETES;
				pilhaDeCharProcurados.push(FECHA_COLCHETES);
			}
			
			if (expressao.charAt(i) == ABRE_CHAVES){				
				topo = ABRE_CHAVES;
				pilhaDeCharProcurados.push(FECHA_CHAVES);
			}
			
			if (expressao.charAt(i) == topo){				
				pilhaDeCharProcurados.pop();
			}
		}

		return pilhaDeCharProcurados.isEmpty();
	}



	private char devolveCharASerProcurado(char charDeAbertura){

	}



}
